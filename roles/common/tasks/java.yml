#- name: Installing Maven.
#  ansible.builtin.dnf:
#    name: maven
#    state: present
- name: Installing OpenJDK.
  ansible.builtin.dnf:
    name: java-17-openjdk
    state: present

- name: Import task from app-prerequisites.yml
  ansible.builtin.import_tasks: app-prerequisites.yml

# While using ci cd in server side no need to do build.
#- name: Building the application using Maven.
#  ansible.builtin.shell: mvn clean package ; mv /app/target/{{component}}-1.0.jar /app/{{component}}.jar
#  args:
#    chdir: /app

- name: Check Schema is loaded or not.
  ansible.builtin.shell: echo 'show databases' | mysql -h {{ lookup('amazon.aws.aws_ssm', 'shipping.{{env}}.DB_HOST', region='us-east-1') }} -u{{ lookup('amazon.aws.aws_ssm', 'rds.{{env}}.master_username', region='us-east-1') }} -p{{ lookup('amazon.aws.aws_ssm', 'rds.{{env}}.master_password', region='us-east-1') }} | grep -i {{DBNAME}}
  ignore_errors: yes
  register: schema_check

- name: Import task from mysql_schema_setup.yml
  ansible.builtin.import_tasks: mysql_schema_setup.yml
  when: schema_type is defined and schema_check.rc != 0

- name: Import task from systemd_setup.yml
  ansible.builtin.import_tasks: systemd_setup.yml

- name: Setup Filebeat.
  ansible.builtin.import_role:
    name: elk
    tasks_from: filebeat.yml


